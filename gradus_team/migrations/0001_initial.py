# Generated by Django 5.0.2 on 2024-03-05 10:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2, verbose_name='Статус игры')),
                ('data', models.DateTimeField(blank=True, verbose_name='Дата и время матча')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Команда')),
                ('slug_team', models.SlugField(unique=True)),
                ('logo', models.ImageField(blank=True, default=None, null=True, upload_to='team_logo/%Y/%m', verbose_name='Логотип')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2, verbose_name='Статус команды')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Отчество')),
                ('slug', models.SlugField(max_length=255, unique_for_date='publish', verbose_name='Слаг')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('height', models.SmallIntegerField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.SmallIntegerField(blank=True, null=True, verbose_name='Вес')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('role', models.CharField(blank=True, choices=[('G', 'Goalkeeper'), ('D', 'Defender'), ('F', 'Forward')], max_length=1, null=True, verbose_name='Роль')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('avatar', models.ImageField(blank=True, default=None, null=True, upload_to='avatar/', verbose_name='Фото')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2, verbose_name='Статус игрока')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='gradus_team.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
                'ordering': ['-publish'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_goal', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение 1'), django.core.validators.MaxValueValidator(50, 'Максимальное значение 50')], verbose_name='Минута гола')),
                ('game_goal', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goal', to='gradus_team.game', verbose_name='Игра')),
                ('player_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='gradus_team.player', verbose_name='Автор мяча')),
            ],
        ),
        migrations.CreateModel(
            name='Assist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_assist', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение 1'), django.core.validators.MaxValueValidator(50, 'Максимальное значение 50')], verbose_name='Минута ассиста')),
                ('game_assist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_assist', to='gradus_team.game', verbose_name='Игра')),
                ('player_assist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_assist', to='gradus_team.player', verbose_name='Автор паса')),
            ],
        ),
        migrations.CreateModel(
            name='RedCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_assist', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение 1'), django.core.validators.MaxValueValidator(50, 'Максимальное значение 50')], verbose_name='Минута КК')),
                ('game_assist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_red_card', to='gradus_team.game', verbose_name='Игра')),
                ('player_assist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_red_card', to='gradus_team.player', verbose_name='Автор паса')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='guest_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_guest', to='gradus_team.team', verbose_name='Гостевая команда'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_home', to='gradus_team.team', verbose_name='Домашняя команда'),
        ),
        migrations.CreateModel(
            name='TeamComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition', models.ManyToManyField(blank=True, related_name='composition', to='gradus_team.player', verbose_name='Состав команды')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_composition', to='gradus_team.game', verbose_name='Игра')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_composition', to='gradus_team.team', verbose_name='Игра')),
            ],
        ),
        migrations.CreateModel(
            name='YellowCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_assist', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение 1'), django.core.validators.MaxValueValidator(50, 'Максимальное значение 50')], verbose_name='Минута ЖК')),
                ('game_assist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_yellow_card', to='gradus_team.game', verbose_name='Игра')),
                ('player_assist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_yellow_card', to='gradus_team.player', verbose_name='Автор паса')),
            ],
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['-publish'], name='gradus_team_publish_298865_idx'),
        ),
    ]
